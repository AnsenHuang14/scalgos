Problem Statement:
Alex works at the biotech division of the Association of Crazy Mathematicians. She helps her organization catch criminals by doing DNA fingerprinting. 
DNA contains 5 different bases - adenine (abbreviated A), guanine (G), cytosine (C), thymine (T) and uracil (U). Each strand of DNA can be represented as a sequence of A, G, C, T and U.
However, each strand can be millions of characters long. Alex, being a clever computer scientist, developed a simple algorithm to compress any DNA sequence by writing down numbers of long runs of single letters instead of all the letters e.g. She can write "AAAGGUCCCCCCCCCCCCTA" as "3A2GU12C1TA" because AAA-GG-U-CCCCCCCCCCCC-T-A has 3As followed by 2Gs followed by an U (note that the 1 is optional) followed by 12 Cs and a T and an A. As you can see the second "shorthand" representaiton is much shorter that the original.
Help Alex figure out if her compressing algorithm works correctly or not.

Input Format:
The first line would contain a single number N denoting the number of test cases.
After the first line there would be N lines of the form "X Y" where X is a valid "shorthand" notation of the DNA sequence and Y is the uncompressed "long" representation.

Output Format:
For each of the N input lines output "Yes" if X and Y represent the same DNA strand and "No" If they do not.

Constraints:
N would be between 1 and 25 (both inclusive)
X would be a valid "shorthand" notations of DNA and Y would be a valid DNA sequence. Both X and Y would have length greater than 0.
The length of Y would be less than or equal to 1000 characters. If X is expanded, its length would also be less than or equal to 1000 characters.
All letters in X and Y would be uppercase.

Sample Input:
6
3A2GU12C1TA AAAGGUCCCCCCCCCCCCTA
1A A
1A2G AGGG
2GCUT1AG GGCUTAG
2T2TC TTTTC
3A2GU5C5C1T1A AAAGGUCCCCCCCCCCCCTA

Sample Output:
Yes
Yes
No
Yes
Yes
No
